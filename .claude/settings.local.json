{
  "permissions": {
    "allow": [
      "Bash(python -m pytest test_1_to_6.py -v)",
      "Bash(python:*)",
      "Bash(mv:*)",
      "Bash(rm:*)",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "Bash(cp:*)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" outlet_49.5738_-119.0368 -o output)",
      "Bash(./venv_clean_new/Scripts/pip.exe install networkx whitebox pyflwdir)",
      "Bash(chcp:*)",
      "Bash(set PYTHONIOENCODING=utf-8)",
      "WebFetch(domain:www.whiteboxgeo.com)",
      "WebFetch(domain:gis.stackexchange.com)",
      "Bash(mkdir:*)",
      "Bash(copy:*)",
      "Bash(dir test_*.py)",
      "Bash(dir:*)",
      "Bash(pip install:*)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" --version)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" fraser_bc_real -o output)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" watershed_routing_routing -o output)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(for file in test_*.py)",
      "Bash(do mv \"$file\" tests/)",
      "Bash(done)",
      "Bash(for:*)",
      "Bash(do if [ -f \"$file\" ])",
      "Bash(then mv \"$file\" archive/)",
      "Bash(fi)",
      "Bash(true)",
      "Bash(rg:*)",
      "Bash(del subbasins_merged.*)",
      "WebFetch(domain:www.eng.buffalo.edu)",
      "Bash(\"E:\\python\\Raven\\workflows\\project_steps\\exe\\OSTRICH.exe\" ostIn.txt)",
      "Bash(\"E:\\python\\Raven\\workflows\\project_steps\\exe\\OSTRICH.exe\" ostIn_basic.txt)",
      "WebFetch(domain:usbr.github.io)",
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raven.uwaterloo.ca)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" --help)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" Nith -o output)",
      "Bash(venv_clean_newScriptsactivate)",
      "Bash(conda create:*)",
      "Bash(where:*)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" outlet_49.5738_-119.0368 -o results)",
      "Bash(del:*)",
      "Bash(sed:*)",
      "Bash(awk:*)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" raven-hbv-salmon -o output)",
      "Bash(PYTHONPATH=.. python ../workflows/project_steps/step3_lake_processing/step3_lake_processing.py 49.6 -119.0 --outlet-name test_outlet --workspace-dir .)",
      "Bash(git checkout:*)",
      "Bash(PYTHONPATH=. python workflows/project_steps/step3_lake_processing/step3_lake_processing.py 49.5738 -119.0368 --outlet-name outlet_49.5738_-119.0368 --workspace-dir outlet_49.5738_-119.0368)",
      "Bash(PYTHONPATH=. python workflows/project_steps/step3_lake_processing/step3_lake_processing.py \"49.5738,-119.0368\" --outlet-name outlet_49.5738_-119.0368 --workspace-dir outlet_49.5738_-119.0368)",
      "Bash(PYTHONPATH=.. python ../workflows/project_steps/climate_hydrometric_data/step_climate_hydrometric_data.py 49.5738 -119.0368 --workspace-dir .)",
      "Bash(PYTHONPATH=.. python ../workflows/project_steps/climate_hydrometric_data/step_climate_hydrometric_data.py 49.5738 -119.0368 --workspace .)",
      "Bash(PYTHONPATH=.. python ../workflows/project_steps/climate_hydrometric_data/step_climate_hydrometric_data.py 49.5738 -119.0368 --workspace . --climate-range 60)",
      "Bash(PYTHONPATH=.. python ../workflows/project_steps/step5_raven_model/step5_raven_model.py 49.5738 -119.0368 --workspace-dir .)",
      "Bash(PYTHONPATH=.. python ../workflows/project_steps/step5_raven_model/step5_raven_model.py 49.5738 -119.0368 --workspace-dir . --outlet-name outlet_49.5738_-119.0368)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" outlet_49.5738_-119.0368 -v 2 -o output)",
      "Bash(\"E:\\python\\Raven\\RavenHydroFramework\\build\\Release\\Raven.exe\" outlet_49.5738_-119.0368_test -o output)"
    ],
    "deny": []
  }
}